#!/usr/bin/env python3
from fontFeatures.jankyPOS.Buffer import Buffer
from fontFeatures.ttLib import unparse
from fontTools.ttLib import TTFont
from fontFeatures.shaperLib.Shaper import Shaper
import sys
from fontFeatures.fontProxy import FontProxy
from fontTools.ttLib import TTFont
import argparse
import logging

parser = argparse.ArgumentParser(description='Shape text')
parser.add_argument('font', metavar='OTF',
                    help='Font file')
parser.add_argument('string', metavar='STRING',
                    help='Text to shape')
parser.add_argument('--verbose', '-V', dest='logging', action='store_true',
                    help='Output interim shaping results')

args = parser.parse_args()

if args.logging:
    logging.basicConfig(format='%(message)s')
    logging.getLogger("fontFeatures.shaperLib").setLevel(logging.DEBUG)

font = TTFont(args.font)
ff = unparse(font)
buf = Buffer(font, unicodes=args.string)
shaper = Shaper(ff, FontProxy(font))
shaper.execute(buf)
if buf.direction == "RTL":
    buf.items = list(reversed(buf.items))
print(buf.serialize())
